/*
 * Snapview6 API
 * Official API available to Snapview customers
 *
 * OpenAPI spec version: v1
 * Contact: support@snapview.de
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package de.snapview.api.domain;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * User sessions object
 */
@ApiModel(description = "User sessions object")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-06-21T09:48:31.039+02:00")
public class Session {
  @SerializedName("plannedStartUTC")
  private String plannedStartUTC = null;

  @SerializedName("timeZoneOffset")
  private String timeZoneOffset = null;

  @SerializedName("username")
  private String username = null;

  @SerializedName("duration")
  private Integer duration = null;

  @SerializedName("freeField1")
  private String freeField1 = null;

  @SerializedName("freeField2")
  private String freeField2 = null;

  @SerializedName("freeField3")
  private String freeField3 = null;

  @SerializedName("password")
  private String password = null;

  @SerializedName("topic")
  private String topic = null;

  public Session plannedStartUTC(String plannedStartUTC) {
    this.plannedStartUTC = plannedStartUTC;
    return this;
  }

   /**
   * Planned session start expressed as UTC time. Following time format YYYY/MM/DD HH:ii:ss is accepted only.  For example: 2017/02/24 21:49:00 stands for year:2017 month:02 day:24 hour:21 minute:49 second:00
   * @return plannedStartUTC
  **/
  @ApiModelProperty(required = true, value = "Planned session start expressed as UTC time. Following time format YYYY/MM/DD HH:ii:ss is accepted only.  For example: 2017/02/24 21:49:00 stands for year:2017 month:02 day:24 hour:21 minute:49 second:00")
  public String getPlannedStartUTC() {
    return plannedStartUTC;
  }

  public void setPlannedStartUTC(String plannedStartUTC) {
    this.plannedStartUTC = plannedStartUTC;
  }

  public Session timeZoneOffset(String timeZoneOffset) {
    this.timeZoneOffset = timeZoneOffset;
    return this;
  }

   /**
   * expressed in minutes, relative to UTC.  The difference in minutes to UTC-0. Can be a positive or negative integer value.  The number of minutes has to be divisible by 15, for example: 330 for India, 60 for Berlin.  &lt;!-- Eucla: UTC +8:45 Standard time: Australian Central Western Standard Time(ACWST)--&gt;
   * @return timeZoneOffset
  **/
  @ApiModelProperty(required = true, value = "expressed in minutes, relative to UTC.  The difference in minutes to UTC-0. Can be a positive or negative integer value.  The number of minutes has to be divisible by 15, for example: 330 for India, 60 for Berlin.  <!-- Eucla: UTC +8:45 Standard time: Australian Central Western Standard Time(ACWST)-->")
  public String getTimeZoneOffset() {
    return timeZoneOffset;
  }

  public void setTimeZoneOffset(String timeZoneOffset) {
    this.timeZoneOffset = timeZoneOffset;
  }

  public Session username(String username) {
    this.username = username;
    return this;
  }

   /**
   * Username of the user the session will be reserved for
   * @return username
  **/
  @ApiModelProperty(required = true, value = "Username of the user the session will be reserved for")
  public String getUsername() {
    return username;
  }

  public void setUsername(String username) {
    this.username = username;
  }

  public Session duration(Integer duration) {
    this.duration = duration;
    return this;
  }

   /**
   * The duration of the session in minutes. This value can be a positive integer. This is used for invitation purpose only. The meeting will not be ended after this time.
   * @return duration
  **/
  @ApiModelProperty(value = "The duration of the session in minutes. This value can be a positive integer. This is used for invitation purpose only. The meeting will not be ended after this time.")
  public Integer getDuration() {
    return duration;
  }

  public void setDuration(Integer duration) {
    this.duration = duration;
  }

  public Session freeField1(String freeField1) {
    this.freeField1 = freeField1;
    return this;
  }

   /**
   * 255 chars for textual data
   * @return freeField1
  **/
  @ApiModelProperty(value = "255 chars for textual data")
  public String getFreeField1() {
    return freeField1;
  }

  public void setFreeField1(String freeField1) {
    this.freeField1 = freeField1;
  }

  public Session freeField2(String freeField2) {
    this.freeField2 = freeField2;
    return this;
  }

   /**
   * 255 chars for textual data
   * @return freeField2
  **/
  @ApiModelProperty(value = "255 chars for textual data")
  public String getFreeField2() {
    return freeField2;
  }

  public void setFreeField2(String freeField2) {
    this.freeField2 = freeField2;
  }

  public Session freeField3(String freeField3) {
    this.freeField3 = freeField3;
    return this;
  }

   /**
   * 255 chars for textual data
   * @return freeField3
  **/
  @ApiModelProperty(value = "255 chars for textual data")
  public String getFreeField3() {
    return freeField3;
  }

  public void setFreeField3(String freeField3) {
    this.freeField3 = freeField3;
  }

  public Session password(String password) {
    this.password = password;
    return this;
  }

   /**
   * Session Password participants will need to enter in order to participate
   * @return password
  **/
  @ApiModelProperty(value = "Session Password participants will need to enter in order to participate")
  public String getPassword() {
    return password;
  }

  public void setPassword(String password) {
    this.password = password;
  }

  public Session topic(String topic) {
    this.topic = topic;
    return this;
  }

   /**
   * Topic of the session
   * @return topic
  **/
  @ApiModelProperty(value = "Topic of the session")
  public String getTopic() {
    return topic;
  }

  public void setTopic(String topic) {
    this.topic = topic;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Session session = (Session) o;
    return Objects.equals(this.plannedStartUTC, session.plannedStartUTC) &&
        Objects.equals(this.timeZoneOffset, session.timeZoneOffset) &&
        Objects.equals(this.username, session.username) &&
        Objects.equals(this.duration, session.duration) &&
        Objects.equals(this.freeField1, session.freeField1) &&
        Objects.equals(this.freeField2, session.freeField2) &&
        Objects.equals(this.freeField3, session.freeField3) &&
        Objects.equals(this.password, session.password) &&
        Objects.equals(this.topic, session.topic);
  }

  @Override
  public int hashCode() {
    return Objects.hash(plannedStartUTC, timeZoneOffset, username, duration, freeField1, freeField2, freeField3, password, topic);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Session {\n");

    sb.append("    plannedStartUTC: ").append(toIndentedString(plannedStartUTC)).append("\n");
    sb.append("    timeZoneOffset: ").append(toIndentedString(timeZoneOffset)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("    freeField1: ").append(toIndentedString(freeField1)).append("\n");
    sb.append("    freeField2: ").append(toIndentedString(freeField2)).append("\n");
    sb.append("    freeField3: ").append(toIndentedString(freeField3)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    topic: ").append(toIndentedString(topic)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

